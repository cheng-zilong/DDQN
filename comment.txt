1. 三个进程
    * Network process（main proces）
    * Actor process
    * ReplayBuffer process
    * Log process 

2. actor process 
    * 有cache，初始化cache后，network process请求step，直接返回cache中的step，然后产生新的step
    * 返回 action, obs, reward, done, info，如果是reset，返回None, obs，None，None，None
    * 如果env done，自动reset()
    

3. ReplayBuffer process
    * 有cache，初始化cache后，network process请求sample，直接返回cache中的sample，然后产生新的sample
    * gym env不可以加framestack然后传入ReplayBuffer，因为lazyframes不能用pipe在进程之间传递
        ** pipe传递数据时会pickle，导致lazyframe的压缩数据被重新展开写入ReplayBuffer Process的内存
        ** 解决方法是传递env的最近一个frame，然后在replaybuffer process中重新构建lazyframes
        ** baseline 的lazyframe有问题

4. Log Process的内存
    * 打印结果

5. For debugging
    * log softmax不可以自己搭建，因为训练后期，softmax计算结果可能为0，log 0会导致-inf结果

6. For evaluating
python test_async_actor.py --mode eval --model_path "save_model/CatDQN(BreakoutNoFrameskip-v4)_4_20210621-024725.pt"

7. games
    * python main.py --env_name PongNoFrameskip-v4  --eps_decay_steps 100000 --buffer_size 100000 --start_training_steps 10000 --train_freq 1 --update_target_steps 1000 --save_model_steps 10000